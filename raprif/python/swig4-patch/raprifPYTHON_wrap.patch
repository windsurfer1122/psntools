--- build/linux-x86_64-static/target-python3-swig/sdist/src/raprifPYTHON_wrap.c	2021-09-19 12:08:29.756975744 +0000
+++ raprif/python/src/raprifPYTHON_wrap.c	2021-09-19 12:08:20.996975872 +0000
@@ -2725,6 +2725,24 @@ SWIG_FromCharPtr(const char *cptr)
 }
 
 
+// raprif: SWIG/cstring.i/%cstring_output_allocate_size: adapt to byte array
+SWIGINTERNINLINE PyObject *
+SWIG_PyByteArrayFromCharPtrAndSize(const char* carray, size_t size)
+{
+  if (carray) {
+    if (size > INT_MAX) {
+      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
+      return pchar_descriptor ? 
+	SWIG_InternalNewPointerObj((char *)(carray), pchar_descriptor, 0) : SWIG_Py_Void();
+    } else {
+      return PyByteArray_FromStringAndSize(carray, (Py_ssize_t)(size));
+    }
+  } else {
+    return SWIG_Py_Void();
+  }
+}
+
+
 SWIGINTERNINLINE PyObject*
   SWIG_From_int  (int value)
 {
@@ -2806,7 +2824,8 @@ SWIGINTERN PyObject *_wrap_rif2rap_round
   swig_rif2rap_rounds((unsigned char const *)arg1,arg2,arg3);
   resultobj = SWIG_Py_Void();
   if (*arg2) {
-    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_FromCharPtrAndSize(*arg2,*arg3));
+    // raprif: SWIG/cstring.i/%cstring_output_allocate_size: fix type of result
+    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_PyByteArrayFromCharPtrAndSize((char *)*arg2,*arg3));
     free(*arg2);
   }
   return resultobj;
@@ -2852,7 +2871,8 @@ SWIGINTERN PyObject *_wrap_rap2rif_round
   swig_rap2rif_rounds((unsigned char const *)arg1,arg2,arg3);
   resultobj = SWIG_Py_Void();
   if (*arg2) {
-    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_FromCharPtrAndSize(*arg2,*arg3));
+    // raprif: SWIG/cstring.i/%cstring_output_allocate_size: fix type of result
+    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_PyByteArrayFromCharPtrAndSize((char *)*arg2,*arg3));
     free(*arg2);
   }
   return resultobj;
